# Algoritmos_e_Estrutura_de_dados_BICT_2025
# 1. (Fácil) Invertendo uma Palavra com Pilhas 

class Pilha:
    def __init__(self):
        self.itens = []

    def esta_vazia(self):
        return len(self.itens) == 0

    def push(self, item):
        self.itens.append(item)

    def pop(self):
        if not self.esta_vazia():
            return self.itens.pop()

    def topo(self):
        if not self.esta_vazia():
            return self.itens[-1]


def inverter_string(texto):
    pilha = Pilha()

    # Adiciona cada caractere à pilha
    for caractere in texto:
        pilha.push(caractere)

    # Remove os caracteres da pilha e constrói a string invertida
    invertida = ''
    while not pilha.esta_vazia():
        invertida += pilha.pop()

    return invertida


# Exemplo de uso
entrada = "Python"
saida = inverter_string(entrada)
print(f"Entrada: {entrada}")
print(f"Saída: {saida}")
